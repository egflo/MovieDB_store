AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  PrivateDnsNamespaceName:
    Type: String
    Default: local
Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: default-cluster
  EurekaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: eureka-execution-role
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
  EurekaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: eureka-role
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
  CloudwatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join ['-', [ECSLogGroup, !Ref 'AWS::StackName']]
      RetentionInDays: 14
  PrivateNamespace:
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
    Properties:
      Name: !Ref PrivateDnsNamespaceName
      Vpc: vpc-06ebad9e5009fb4d4
  GatewayServerDiscoveryService:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - TTL: 60
            Type: A
          - TTL: 60
            Type: SRV
      Name: gateway-server
      NamespaceId: !Ref PrivateNamespace
  GatewayServerTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub gateway-server-task
      Cpu: 512
      Memory: 1024
      NetworkMode: awsvpc
      TaskRoleArn: !Ref EurekaRole
      ExecutionRoleArn: !Ref EurekaExecutionRole
      RequiresCompatibilities:
        - FARGATE
        - EC2
      ContainerDefinitions:
        - Name: gateway-server
          Image: 472315148525.dkr.ecr.us-west-2.amazonaws.com/gateway:latest
          PortMappings:
            - ContainerPort: 8760
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudwatchLogsGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: gateway-server
          Environment:
            - Name: EUREKA_URI
              Value: !Sub
                - 'http://${ServiceName}.${NamespaceName}:8761/eureka'
                - ServiceName: !GetAtt EurekaServerDiscoveryService.Name
                  NamespaceName: !Ref PrivateDnsNamespaceName
            - Name: EUREKA_INSTANCE_HOSTNAME
              Value: gateway-server
            - Name: EUREKA_INSTANCE_HOSTNAME_MOVIE_SERVICE
              Value: !Sub
                - '${ServiceName}.${NamespaceName}'
                - ServiceName: !GetAtt MovieServiceDiscoveryService.Name
                  NamespaceName: !Ref PrivateDnsNamespaceName
            - Name: EUREKA_INSTANCE_HOSTNAME_ORDER_SERVICE
              Value: !Sub
                - '${ServiceName}.${NamespaceName}'
                - ServiceName: !GetAtt OrderServiceDiscoveryService.Name
                  NamespaceName: !Ref PrivateDnsNamespaceName
            - Name: EUREKA_INSTANCE_HOSTNAME_INVENTORY_SERVICE
              Value: !Sub
                - '${ServiceName}.${NamespaceName}'
                - ServiceName: !GetAtt InventoryServiceDiscoveryService.Name
                  NamespaceName: !Ref PrivateDnsNamespaceName
  GatewayServerService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref GatewayServerTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      PlatformVersion: 1.4.0
      DeploymentConfiguration:
        MinimumHealthyPercent: 0
        MaximumPercent: 100
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - subnet-0d0789e57243de760
            - subnet-08ccb00e95e06852b
          SecurityGroups:
            - sg-0e5c801803e5960d0
      ServiceRegistries:
        - RegistryArn: !GetAtt GatewayServerDiscoveryService.Arn
          Port: 8760
  EurekaServerDiscoveryService:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - TTL: 60
            Type: A
          - TTL: 60
            Type: SRV
      Name: eureka-server
      NamespaceId: !Ref PrivateNamespace
  EurekaServerTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub eureka-server-task
      Cpu: 512
      Memory: 1024
      NetworkMode: awsvpc
      TaskRoleArn: !Ref EurekaRole
      ExecutionRoleArn: !Ref EurekaExecutionRole
      RequiresCompatibilities:
        - FARGATE
        - EC2
      ContainerDefinitions:
        - Name: eureka-server
          Image: 472315148525.dkr.ecr.us-west-2.amazonaws.com/eureka-server:latest
          PortMappings:
            - ContainerPort: 8761
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudwatchLogsGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: eureka
  EurekaServerService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref EurekaServerTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      PlatformVersion: 1.4.0
      DeploymentConfiguration:
        MinimumHealthyPercent: 0
        MaximumPercent: 100
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - subnet-0d0789e57243de760
            - subnet-08ccb00e95e06852b
          SecurityGroups:
            - sg-0e5c801803e5960d0
      ServiceRegistries:
        - RegistryArn: !GetAtt EurekaServerDiscoveryService.Arn
          Port: 8761
  MovieServiceDiscoveryService:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - TTL: 60
            Type: A
          - TTL: 60
            Type: SRV
      Name: movie-service
      NamespaceId: !Ref PrivateNamespace
  MovieServiceTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub movie-service-task
      Cpu: 512
      Memory: 1024
      NetworkMode: awsvpc
      TaskRoleArn: !Ref EurekaRole
      ExecutionRoleArn: !Ref EurekaExecutionRole
      RequiresCompatibilities:
        - FARGATE
        - EC2
      ContainerDefinitions:
        - Name: movie-service
          Image: 472315148525.dkr.ecr.us-west-2.amazonaws.com/movie-service:latest
          PortMappings:
            - HostPort: 8080
              ContainerPort: 8080
            - HostPort: 9090
              ContainerPort: 9090
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudwatchLogsGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: movie-service
          Environment:
            - Name: EUREKA_URI
              Value: !Sub
                - 'http://${ServiceName}.${NamespaceName}:8761/eureka'
                - ServiceName: !GetAtt EurekaServerDiscoveryService.Name
                  NamespaceName: !Ref PrivateDnsNamespaceName
            - Name: MONGO_URI
              Value: mongodb+srv://egflo:108117175aB@serverlessinstance0-pe-0.stkz2.mongodb.net/?retryWrites=true&w=majority
            - Name: MONGO_DB
              Value: MovieDB
            - Name: EUREKA_INSTANCE_HOSTNAME
              Value: !Sub
               - '${ServiceName}.${NamespaceName}'
               - ServiceName: !GetAtt MovieServiceDiscoveryService.Name
                 NamespaceName: !Ref PrivateDnsNamespaceName
            - Name: GRPC_INVENTORY_ADDRESS
              Value: !Sub
                - 'discovery:///${ServiceName}.${NamespaceName}'
                - ServiceName: !GetAtt InventoryServiceDiscoveryService.Name
                  NamespaceName: !Ref PrivateDnsNamespaceName
            - Name: PREFER_IP_ADDRESS
              Value: false
            - Name: SERVER_PORT
              Value: 8080
            - Name: GRPC_PORT
              Value: 9090
  MovieServiceService:
    Type: AWS::ECS::Service
    DependsOn: LoadBalancerListener
    Properties:
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref MovieServiceTaskDefinition
      DesiredCount: 2
      LaunchType: FARGATE
      PlatformVersion: 1.4.0
      DeploymentConfiguration:
        MinimumHealthyPercent: 0
        MaximumPercent: 100
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - subnet-0d0789e57243de760
            - subnet-08ccb00e95e06852b
          SecurityGroups:
            - sg-0e5c801803e5960d0
      ServiceRegistries:
        - RegistryArn: !GetAtt MovieServiceDiscoveryService.Arn
          Port: 8080
      LoadBalancers:
        - ContainerName: movie-service
          ContainerPort: 8080
          TargetGroupArn: !Ref TargetGroup
  InventoryServiceDiscoveryService:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - TTL: 60
            Type: A
          - TTL: 60
            Type: SRV
      Name: inventory-service
      NamespaceId: !Ref PrivateNamespace
  InventoryServiceTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub inventory-service-task
      Cpu: 512
      Memory: 1024
      NetworkMode: awsvpc
      TaskRoleArn: !Ref EurekaRole
      ExecutionRoleArn: !Ref EurekaExecutionRole
      RequiresCompatibilities:
        - FARGATE
        - EC2
      ContainerDefinitions:
        - Name: inventory-service
          Image: 472315148525.dkr.ecr.us-west-2.amazonaws.com/inventory-service:latest
          PortMappings:
            - HostPort: 8080
              ContainerPort: 8080
            - HostPort: 9090
              ContainerPort: 9090
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudwatchLogsGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: inventory-service
          Environment:
            - Name: EUREKA_URI
              Value: !Sub
                - 'http://${ServiceName}.${NamespaceName}:8761/eureka'
                - ServiceName: !GetAtt EurekaServerDiscoveryService.Name
                  NamespaceName: !Ref PrivateDnsNamespaceName
            - Name: EUREKA_INSTANCE_HOSTNAME
              Value: !Sub
                - '${ServiceName}.${NamespaceName}'
                - ServiceName:  !GetAtt InventoryServiceDiscoveryService.Name
                  NamespaceName: !Ref PrivateDnsNamespaceName
            - Name: MYSQL_HOST
              Value: mysql.clmex2hm689e.us-west-2.rds.amazonaws.com
            - Name: MYSQL_DATABASE
              Value: InventoryDB
            - Name: GRPC_MOVIE_ADDRESS
              Value: !Sub
                - 'discovery:///${ServiceName}.${NamespaceName}'
                - ServiceName: !GetAtt MovieServiceDiscoveryService.Name
                  NamespaceName: !Ref PrivateDnsNamespaceName
            - Name: PREFER_IP_ADDRESS
              Value: false
            - Name: SERVER_PORT
              Value: 8080
            - Name: GRPC_PORT
              Value: 9090
  InventoryServiceService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref InventoryServiceTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      PlatformVersion: 1.4.0
      DeploymentConfiguration:
        MinimumHealthyPercent: 0
        MaximumPercent: 100
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - subnet-0d0789e57243de760
            - subnet-08ccb00e95e06852b
          SecurityGroups:
            - sg-0e5c801803e5960d0
      ServiceRegistries:
        - RegistryArn: !GetAtt InventoryServiceDiscoveryService.Arn
          Port: 8080
  OrderServiceDiscoveryService:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - TTL: 60
            Type: A
          - TTL: 60
            Type: SRV
      Name: order-service
      NamespaceId: !Ref PrivateNamespace
  OrderServiceTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub order-service-task
      Cpu: 512
      Memory: 1024
      NetworkMode: awsvpc
      TaskRoleArn: !Ref EurekaRole
      ExecutionRoleArn: !Ref EurekaExecutionRole
      RequiresCompatibilities:
        - FARGATE
        - EC2
      ContainerDefinitions:
        - Name: order-service
          Image: 472315148525.dkr.ecr.us-west-2.amazonaws.com/order-service:latest
          PortMappings:
            - HostPort: 8080
              ContainerPort: 8080
            - HostPort: 9090
              ContainerPort: 9090
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudwatchLogsGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: order-service
          Environment:
            - Name: EUREKA_URI
              Value: !Sub
                - 'http://${ServiceName}.${NamespaceName}:8761/eureka'
                - ServiceName: !GetAtt EurekaServerDiscoveryService.Name
                  NamespaceName: !Ref PrivateDnsNamespaceName
            - Name: EUREKA_INSTANCE_HOSTNAME
              Value: !Sub
               - '${ServiceName}.${NamespaceName}'
               - ServiceName: !GetAtt OrderServiceDiscoveryService.Name
                 NamespaceName: !Ref PrivateDnsNamespaceName
            - Name: POSTGRES_HOST
              Value: postgres.clmex2hm689e.us-west-2.rds.amazonaws.com
            - Name: POSTGRES_DB
              Value: OrderDB
            - Name: GRPC_INVENTORY_ADDRESS
              Value: !Sub
                - 'discovery:///${ServiceName}.${NamespaceName}'
                - ServiceName: !GetAtt InventoryServiceDiscoveryService.Name
                  NamespaceName: !Ref PrivateDnsNamespaceName
            - Name: GRPC_MOVIE_ADDRESS
              Value: !Sub
                - 'discovery:///${ServiceName}.${NamespaceName}'
                - ServiceName: !GetAtt MovieServiceDiscoveryService.Name
                  NamespaceName: !Ref PrivateDnsNamespaceName
            - Name: GRPC_TAX_ADDRESS
              Value: !Sub
               - 'discovery:///${ServiceName}.${NamespaceName}'
               - ServiceName: !GetAtt TaxServiceDiscoveryService.Name
                 NamespaceName: !Ref PrivateDnsNamespaceName
            - Name: PREFER_IP_ADDRESS
              Value: false
            - Name: SERVER_PORT
              Value: 8080
            - Name: GRPC_PORT
              Value: 9090
  OrderServiceService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref OrderServiceTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      PlatformVersion: 1.4.0
      DeploymentConfiguration:
        MinimumHealthyPercent: 0
        MaximumPercent: 100
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - subnet-0d0789e57243de760
            - subnet-08ccb00e95e06852b
          SecurityGroups:
            - sg-0e5c801803e5960d0
      ServiceRegistries:
        - RegistryArn: !GetAtt OrderServiceDiscoveryService.Arn
          Port: 8080
  TaxServiceDiscoveryService:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - TTL: 60
            Type: A
          - TTL: 60
            Type: SRV
      Name: tax-service
      NamespaceId: !Ref PrivateNamespace
  TaxServiceTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub tax-service-task
      Cpu: 512
      Memory: 1024
      NetworkMode: awsvpc
      TaskRoleArn: !Ref EurekaRole
      ExecutionRoleArn: !Ref EurekaExecutionRole
      RequiresCompatibilities:
        - FARGATE
        - EC2
      ContainerDefinitions:
        - Name: tax-service
          Image: 472315148525.dkr.ecr.us-west-2.amazonaws.com/tax-service:latest
          PortMappings:
            - HostPort: 8080
              ContainerPort: 8080
            - HostPort: 9090
              ContainerPort: 9090
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudwatchLogsGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: tax-service
          Environment:
            - Name: EUREKA_URI
              Value: !Sub
                - 'http://${ServiceName}.${NamespaceName}:8761/eureka'
                - ServiceName: !GetAtt EurekaServerDiscoveryService.Name
                  NamespaceName: !Ref PrivateDnsNamespaceName
            - Name: EUREKA_INSTANCE_HOSTNAME
              Value: !Sub
                - '${ServiceName}.${NamespaceName}'
                - ServiceName: !GetAtt TaxServiceDiscoveryService.Name
                  NamespaceName: !Ref PrivateDnsNamespaceName
            - Name: POSTGRES_HOST
              Value: postgres.clmex2hm689e.us-west-2.rds.amazonaws.com
            - Name: POSTGRES_DB
              Value: TaxDB
            - Name: PREFER_IP_ADDRESS
              Value: false
            - Name: SERVER_PORT
              Value: 8080
            - Name: GRPC_PORT
              Value: 9090
  TaxServiceService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref TaxServiceTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      PlatformVersion: 1.4.0
      DeploymentConfiguration:
        MinimumHealthyPercent: 0
        MaximumPercent: 100
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - subnet-0d0789e57243de760
            - subnet-08ccb00e95e06852b
          SecurityGroups:
            - sg-0e5c801803e5960d0
      ServiceRegistries:
        - RegistryArn: !GetAtt TaxServiceDiscoveryService.Arn
          Port: 8080
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${AWS::StackName}-lb
      Subnets:
        - subnet-0d0789e57243de760
        - subnet-08ccb00e95e06852b
      SecurityGroups:
        - sg-0e5c801803e5960d0
  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: 8080
      Protocol: HTTP
  TargetGroup:
      Type: AWS::ElasticLoadBalancingV2::TargetGroup
      Properties:
        TargetType: ip
        Name: !Sub ${AWS::StackName}-tg
        Port: 8080
        Protocol: HTTP
        VpcId: vpc-06ebad9e5009fb4d4