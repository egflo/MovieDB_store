import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import {Layout} from "../components/Layout";
import Typography from "@mui/material/Typography";
import ScrollPagination from "../components/ScrollPagination";
import {CardStyle} from "../components/CardStyle";
import {ContentType} from "../components/ContentType";
import {ViewType} from "../components/ViewType";
import Box from "@mui/material/Box";
import {auth} from "../utils/firebase";
import React from "react";
import useAuthContext from "../hooks/useAuthContext";


const API_URL_BOOKMARK: string = `/${process.env.NEXT_PUBLIC_MOVIE_SERVICE_NAME}/movie/bookmarks/?sortBy=created`;
const API_URL_VOTES: string = `/${process.env.NEXT_PUBLIC_MOVIE_SERVICE_NAME}/movie/all?sortBy=ratings.numOfVotes`;
const API_URL_POPULAR: string = `/${process.env.NEXT_PUBLIC_MOVIE_SERVICE_NAME}/movie/all?sortBy=popularity`;
const API_URL_BOXOFFICE: string = `/${process.env.NEXT_PUBLIC_MOVIE_SERVICE_NAME}/movie/all?sortBy=revenue`;

export default function Home() {
    const auth = useAuthContext();

  return (

    <Box className={styles.container}>

      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Box className={styles.main}>
          <Box
            sx={{
              display: 'flex',
              flexDirection: 'column',
              alignItems: 'center',
              justifyContent: 'center',
              width: '100%',
              height: '100%',
              gap: 2,
              }}
         >

            {auth.user ? (
                <div className="container__main">
                  <div className="container__main__title">
                    <div className="container__main__shape"></div>
                    <Typography variant="h4" component="h2" sx={{
                      color: theme => theme.palette.primary.contrastText,
                    }}>
                      Favorites
                    </Typography>
                  </div>
                    <ScrollPagination path={API_URL_BOOKMARK} style={CardStyle.HORIZONTAL} type={ContentType.MOVIE} view={ViewType.HORIZONTAL} token={auth.token}/>
                </div>
            ) : (null)}



        <div className="container__main">
            <div className="container__main__title">
              <div className="container__main__shape"></div>
              <Typography variant="h4" component="h2" sx={{
                color: theme => theme.palette.primary.contrastText,
              }}>
                Top Rated
              </Typography>
            </div>
            <ScrollPagination path={API_URL_VOTES} style={CardStyle.HORIZONTAL} type={ContentType.MOVIE} view={ViewType.HORIZONTAL}/>
          </div>

          <div className="container__main">
            <div className="container__main__title">
              <div className="container__main__shape"></div>
              <Typography variant="h4" component="h2" sx={{
                color: theme => theme.palette.primary.contrastText,
              }}>
                Most Popular
              </Typography>
            </div>
            <ScrollPagination path={API_URL_POPULAR} style={CardStyle.HORIZONTAL} type={ContentType.MOVIE} view={ViewType.HORIZONTAL}/>
          </div>

          <div className="container__main">
            <div className="container__main__title">
              <div className="container__main__shape"></div>
              <Typography variant="h4" component="h2" sx={{
                color: theme => theme.palette.primary.contrastText,
              }}>
                Box Office
              </Typography>
            </div>
            <ScrollPagination path={API_URL_BOXOFFICE} style={CardStyle.HORIZONTAL} type={ContentType.MOVIE} view={ViewType.HORIZONTAL}/>
          </div>

        </Box>

      </Box>

    </Box>
  )
}


Home.getLayout = (page: any) => (
    <Layout>
      {page}
    </Layout>
);